{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/UI/Input/Input.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/Burger/BuildControls/BuildCongrol/BuildControl.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/NavigationItems/NavItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button.module.css","components/Layout/Layout.module.css","components/Logo/Logo.module.css","assets/Images/burger-logo.png","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop.module.css","components/Burger/Burger.module.css","components/UI/Modal.module.css","components/UI/Spinner/Spinner.module.css","components/Order/Checkout/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css","components/Order/Order.module.css","containers/Auth/Auth.module.css","components/Logo/Logo.js","components/Navigation/NavigationItems/NavItem.js","store/actions/auth.js","store/actions/actionTypes.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","components/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildCongrol/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal.js","components/UI/Button.js","components/Burger/OrderSummary/OrderSummary.js","components/UI/Spinner/Spinner.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/burgerBuilder.js","store/actions/order.js","components/Order/Checkout/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","containers/Auth/Logout.js","containers/Auth/FormErrors.js","containers/Auth/Auth.js","App.js","serviceWorker.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/auth.js","index.js"],"names":["module","exports","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","Input","Label","InputElement","SideDrawer","Open","Close","BuildControl","Less","More","Toolbar","DesktopOnly","NavItem","active","BuildControls","OrderButton","enable","Button","Success","Danger","Content","Logo","__webpack_require__","p","NavigationItems","DrawerToggle","Backdrop","Burger","Modal","Loader","load1","CheckoutSummary","ContactData","Order","Switch","SwitchButton","SwitchSignup","SwitchSignin","SwitchActive","SignUp","logo","props","react_default","a","createElement","className","styles","style","height","src","burgerLogo","alt","navItem","react_router_dom","exact","activeClassName","to","link","children","authSuccess","authData","type","authFail","error","logout","localStorage","removeItem","authMethod","ordersLink","this","isLoggedIn","Component","connect","state","auth","dispatch","onLogout","actions","drawerToggle","onClick","drawerToggleClicked","toolbar","Navigation_NavigationItems_NavigationItems","backdrop","show","clickBackdrop","sideDrawer","attachedClasses","Fragment","sideDrawerClicked","join","Layout","showSideDrawer","sideDrawerClosed","_this","setState","sideDrawerToggleHandler","preState","burgerIngredient","ingredient","burger","transformedIngredients","Object","keys","ingredients","forEach","item","i","push","BurgerIngredient","key","buildControl","label","ingredientRemoved","disabled","ingredientAdded","controls","price","toFixed","map","ctrl","clickPurchase","nextProps","nextState","modalClosed","transform","opacity","button","clicked","btnType","orderSummary","ingredientKeys","listArr","totalPrice","purchaseCancel","purchaseContinue","spinner","BurgerBuilder","purchasing","loading","purchasingHandler","history","purchasingCancelHandler","purchasingContinueHandler","onPurchaseInit","initIngredientsHandler","checkAuthState","disabledInfo","objectSpread","ings","Spinner","addIngredientHandler","removeIngredientHandler","OrderSummary","UI_Modal","burgerBuilder","name","ingredientName","axios","get","then","res","data","checkoutSummary","width","margin","checkoutCancelled","checkoutContinued","input","inputElement","inputtype","required","value","onChange","changed","options","option","displayValue","assign","email","street","zip","deliveryMethod","orderHandler","event","preventDefault","order","customer","userId","onOrderHandler","token","changedHandler","inputId","target","_this2","onSubmit","orderData","post","id","orderId","purchaseOK","catch","err","Checkout","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","redirect","purchased","react_router","path","match","component","bacon","meat","cheese","salad","Orders","onInitOrdersHandler","orders","element","components_Order_Order","query","fetchedOrders","console","log","Logout","FormErrors","_ref","formErrors","fieldName","length","color","Auth","password","confirmation","nameValid","emailValid","passwordValid","confirmationValid","signUpFormValid","signInFormValid","isSignup","isSignin","handleInputChange","defineProperty","validateField","fieldValidationErrors","isEmail","trim","handleFormSubmit","onSignIn","onSignUp","switchSignup","switchSignin","form","errorMessage","response","message","signupClasses","signinClasses","buildingBurger","FormErrors_FormErrors","returnSecureToken","Axios","setItem","localId","idToken","Date","getTime","expiresIn","App","routes","isAuthenticated","components_Layout_Layout","Boolean","window","location","hostname","initialState","INGREDIENT_PRICES","reducer","arguments","undefined","action","newOrder","concat","expirationDate","getItem","currentDate","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","authReducer","store","createStore","applyMiddleware","thunk","defaults","baseURL","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8dde18c2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__2x1-R\",\"BreadTop\":\"BurgerIngredient_BreadTop__179VP\",\"Seeds1\":\"BurgerIngredient_Seeds1__28BXL\",\"Seeds2\":\"BurgerIngredient_Seeds2__SGhYq\",\"Meat\":\"BurgerIngredient_Meat__o92SX\",\"Cheese\":\"BurgerIngredient_Cheese__3zAEa\",\"Salad\":\"BurgerIngredient_Salad__1P6D0\",\"Bacon\":\"BurgerIngredient_Bacon__cqzPE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__2rw-g\",\"Label\":\"Input_Label__ywX6i\",\"InputElement\":\"Input_InputElement__o1szQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__2EdHh\",\"Open\":\"SideDrawer_Open__85iz6\",\"Close\":\"SideDrawer_Close__1I1Qi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__2tzry\",\"Label\":\"BuildControl_Label__JzR3g\",\"Less\":\"BuildControl_Less__dciH9\",\"More\":\"BuildControl_More__1fUMJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__1btNo\",\"DesktopOnly\":\"Toolbar_DesktopOnly__3lbA-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavItem\":\"NavItem_NavItem__DGE9N\",\"active\":\"NavItem_active__2NT6N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__1XYsQ\",\"OrderButton\":\"BuildControls_OrderButton__3Ln5B\",\"enable\":\"BuildControls_enable__1qI7a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3IVEn\",\"Success\":\"Button_Success__DI6Qd\",\"Danger\":\"Button_Danger__3iruM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__VpiBD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__R5Z9w\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__2edyG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__8P8aO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__5LCMp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__VTSTt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__bOcsq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__s52Py\",\"load1\":\"Spinner_load1__38S1S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__2Sodw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__2BlBA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__1CiH_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Switch\":\"Auth_Switch__1fMLV\",\"SwitchButton\":\"Auth_SwitchButton__2mK8-\",\"SwitchSignup\":\"Auth_SwitchSignup__1G-6k\",\"SwitchSignin\":\"Auth_SwitchSignin__1Mcu8\",\"SwitchActive\":\"Auth_SwitchActive__2FUjx\",\"ContactData\":\"Auth_ContactData__2eO5r\",\"SignUp\":\"Auth_SignUp__1mYe9\",\"enable\":\"Auth_enable__2tLRc\"};","import React from 'react'\nimport styles from './Logo.module.css'\nimport burgerLogo from '../../assets/Images/burger-logo.png'\n\nconst logo = (props)=>(\n    <div className={styles.Logo} style={{height:props.height}}>\n        <img src={burgerLogo} alt=\"My Burger\"></img>\n    </div>\n)\n\nexport default logo","import React from 'react'\nimport styles from './NavItem.module.css'\nimport {NavLink} from 'react-router-dom'\nconst navItem = (props)=>(\n    <li className={styles.NavItem}>\n        <NavLink \n            exact\n            activeClassName={styles.active}\n            to={props.link}>{props.children}</NavLink>\n    </li>\n)\n\nexport default navItem","import * as actionTypes from './actionTypes'\nimport Axios from 'axios';\n\nexport const authStart = ()=>{\n    return {\n        type: actionTypes.auth_start\n    }\n}\n\nexport const authSuccess = (authData)=>{\n    return {\n        type: actionTypes.auth_success,\n        authData\n    }\n}\n\nexport const authFail = (error)=>{\n    return {\n        type: actionTypes.auth_fail,\n        error\n    }\n}\n\nexport const logout = ()=>{\n    localStorage.removeItem('userId')\n    localStorage.removeItem('token')\n    localStorage.removeItem('expirationDate')\n    return {\n        type: actionTypes.logout\n    }\n}\n\n//sign up\nexport const auth = (email,password)=>{\n    const authData = {\n        email,\n        password,\n        returnSecureToken: true\n    }\n    return dispatch=>{\n        dispatch(authStart())\n        Axios.post('https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=AIzaSyAIOOYgeJMUiRLB9RNp5PfDY87H_rkUlbk',authData)\n            .then(res=>{\n                console.log(res)\n                dispatch(authSuccess(res.data))\n            })\n            .catch(err=>{\n                dispatch(authFail(err))\n            })\n    }\n}\nexport const authSignIn = (email,password)=>{\n    const authData = {\n        email,\n        password,\n        returnSecureToken: true\n    }\n    return (dispatch)=>{\n        dispatch(authStart())\n        Axios.post('https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=AIzaSyAIOOYgeJMUiRLB9RNp5PfDY87H_rkUlbk',authData)\n            .then(res=>{\n                localStorage.setItem('userId',res.data.localId)\n                localStorage.setItem('token',res.data.idToken)\n                localStorage.setItem('expirationDate',new Date(new Date().getTime() + res.data.expiresIn*1000))\n                dispatch(authSuccess(res.data))\n            })\n            .catch(err=>{\n                dispatch(authFail(err))\n            })\n    }\n}\n\nexport const checkAuthState = ()=>{\n    return {\n        type: actionTypes.checkAuthState\n    }\n}","export const addIngredient = \"addIngredient\"\nexport const removeIngredient = \"removeIngredient\"\nexport const setIngredients = \"setIngredients\"\nexport const initIngredients = \"initIngredients\"\n\nexport const purchaseOk = 'purchaseOK'\nexport const purchaseFail = 'purchaseFail'\n\nexport const startingPurchase = \"startingPurchase\"\n\nexport const purchaseInit = 'purchaseInit'\n\nexport const fetchOrderInit = 'fetchOrderInit'\n\nexport const fetchOrders = 'fetchOrders'\n\n\nexport const auth_start = 'auth_start'\nexport const auth_success = 'auth_success'\nexport const auth_fail = 'auth_fail'\n\nexport const logout = 'logout'\n\nexport const checkAuthState = 'checkAuthState'","import React, { Component } from 'react'\nimport NavItem from './NavItem'\nimport styles from './NavigationItems.module.css'\nimport {connect} from 'react-redux'\nimport * as actions from '../../../store/actions/index'\n\nclass NavigationItems extends Component{\n\n    render(){\n        let authMethod = <NavItem link=\"/auth\">Sign In</NavItem>\n        let ordersLink = null\n        if(this.props.isLoggedIn){\n            ordersLink = <NavItem link=\"/orders\">Orders</NavItem>\n            authMethod = <NavItem link=\"/logout\">Logout</NavItem> // <button onClick={this.props.onLogout}>Logout</button>\n        }\n        return (\n            <ul className={styles.NavigationItems}>\n                <NavItem link=\"/\">Burger Builder</NavItem>\n                {ordersLink}\n                {authMethod}\n            </ul>\n        )\n    }\n}\n\nconst mapStateToProps = (state)=>{\n    return {\n        isLoggedIn: state.auth.isLoggedIn\n    }\n}\nconst mapDispatchToProps = (dispatch)=>{\n    return {\n        onLogout:()=> dispatch(actions.logout())\n    }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(NavigationItems)\n\n// const navigationItems = (props)=>(\n//     <ul className={styles.NavigationItems}>\n//         <NavItem link=\"/\">Burger Builder</NavItem>\n//         <NavItem link=\"/orders\">Orders</NavItem>\n//         <NavItem link=\"/auth\">Sign In</NavItem>\n//     </ul>\n// )\n\n// export default navigationItems","import React from 'react'\nimport styles from './DrawerToggle.module.css'\n\nconst drawerToggle = (props)=>{\n    return (\n        <div onClick={props.drawerToggleClicked} className={styles.DrawerToggle}>\n            <div></div>\n            <div></div>\n            <div></div>\n        </div>\n    )\n}\n\nexport default drawerToggle","import React from 'react'\nimport styles from './Toolbar.module.css'\nimport Logo from '../..//Logo/Logo'\nimport NavigationItems from '../NavigationItems/NavigationItems'\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle'\n\n\nconst toolbar = (props)=>(\n    <header className={styles.Toolbar}>\n        <DrawerToggle drawerToggleClicked={props.drawerToggleClicked}></DrawerToggle>\n        <Logo height='80%'></Logo>\n        <nav className={styles.DesktopOnly}>\n            <NavigationItems></NavigationItems>\n        </nav>\n    </header>\n)\n\nexport default toolbar","import React from 'react'\nimport styles from './Backdrop.module.css'\n\nconst backdrop = (props)=>(\n    props.show?<div className={styles.Backdrop} onClick={props.clickBackdrop}></div>:null\n)\n\nexport default backdrop","import React from 'react'\nimport NavigationItems from '../NavigationItems/NavigationItems'\nimport Logo from '../../Logo/Logo'\nimport styles from './SideDrawer.module.css'\nimport Backdrop from '../../UI/Backdrop'\nconst sideDrawer = (props)=>{\n\n    let attachedClasses = [styles.SideDrawer, styles.Close]\n    if(props.show){\n        attachedClasses = [styles.SideDrawer,styles.Open]\n    }\n\n    return (\n        <React.Fragment>\n            <Backdrop show={props.show} clickBackdrop={props.sideDrawerClicked}></Backdrop>\n            <div className={attachedClasses.join(' ')} onClick={props.sideDrawerClicked}>\n                <Logo height='11%' />\n                <nav>\n                    <NavigationItems></NavigationItems>\n                </nav>\n            </div>\n        </React.Fragment>\n    )\n}\n\nexport default sideDrawer","import React ,{Component} from 'react'\nimport styles from './Layout.module.css'\nimport Toolbar from '../Navigation/Toolbar/Toolbar'\nimport SideDrawer from '../Navigation/SideDrawer/SideDrawer'\n\nclass Layout extends Component {\n    state={\n        showSideDrawer : false\n    }\n\n    sideDrawerClosed= ()=>{\n        this.setState({showSideDrawer:false})\n    }\n\n    sideDrawerToggleHandler=()=>{\n        this.setState((preState)=>{\n            return {showSideDrawer : !preState.showSideDrawer}\n        })\n    }\n\n    render(){\n        return(\n            <React.Fragment>\n                <Toolbar drawerToggleClicked={this.sideDrawerToggleHandler}></Toolbar>\n                <SideDrawer show={this.state.showSideDrawer} sideDrawerClicked={this.sideDrawerClosed}></SideDrawer>\n                <main className={styles.Content}>\n                    {this.props.children}\n                </main>\n            </React.Fragment>\n        )\n    }\n\n}\n\nexport default Layout\n","import React from 'react'\nimport styles from './BurgerIngredient.module.css'\nimport PropTypes from 'prop-types'\nconst burgerIngredient = (props)=>{\n    let ingredient = null;\n\n    switch(props.type){\n        case('bread-bottom'):\n            ingredient = <div className={styles.BreadBottom}></div>\n            break;\n        case('bread-top'):\n            ingredient = (\n                <div className={styles.BreadTop}>\n                    <div className={styles.Seeds1}></div>\n                    <div className={styles.Seeds2}></div>\n                </div>\n            )\n            break;\n        case('meat'):\n            ingredient = <div className={styles.Meat}></div>\n            break;\n        case('cheese'):\n            ingredient = <div className={styles.Cheese}></div>\n            break;\n        case('salad'):\n            ingredient = <div className={styles.Salad}></div>\n            break;\n        case('bacon'):\n            ingredient = <div className={styles.Bacon}></div>\n            break;\n        default:\n            ingredient = null;\n    }\n\n    return ingredient\n\n    // let css_class = ''\n    // if(props.type=\"bread-top\"){\n    //     css_class = \"BreadTop\"\n    // }\n    // else if()\n    // return \n}\nburgerIngredient.propTypes = {\n    type: PropTypes.string.isRequired\n}\n\nexport default burgerIngredient;","import React from 'react'\nimport styles from './Burger.module.css'\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient'\nconst burger = ( props ) => {\n\n    let transformedIngredients = [];\n    Object.keys(props.ingredients)\n    .forEach(\n        item => {\n            for (let i = 0; i < props.ingredients[item]; i++) {\n                transformedIngredients.push(\n                    <BurgerIngredient key={item + i} type={item} />\n                );\n            }\n        }\n    );\n\n    return (\n        <div className={styles.Burger}>\n            <BurgerIngredient type=\"bread-top\"></BurgerIngredient>\n            {transformedIngredients}\n            <BurgerIngredient type=\"bread-bottom\"></BurgerIngredient>\n        </div>\n    )\n}\n\nexport default burger;","import React from 'react'\n\nimport styles from './BuildControl.module.css'\nconst buildControl = (props)=>{\n    return (\n        <div className={styles.BuildControl}>\n            <div className={styles.Label}>{props.label}</div>\n            <button className={styles.Less} onClick={props.ingredientRemoved} disabled={props.disabled}>Less</button>\n            <button className={styles.More} onClick={props.ingredientAdded}>More</button>\n        </div>\n    )\n}\n\nexport default buildControl","\nimport React from 'react'\nimport styles from './BuildControls.module.css'\nimport BuildControl from './BuildCongrol/BuildControl'\n\nconst controls = [\n    {label:'Salad', type: 'salad'},\n    {label:'Meat', type: 'meat'},\n    {label:'Cheese', type: 'cheese'},\n    {label:'Bacon', type: 'bacon'}\n]\n\n\nconst buildControl = (props)=>{\n\n    return (\n        <div className={styles.BuildControls}>\n            <p>Burger Price: <b>{props.price.toFixed('2')}</b></p>\n            {\n                controls.map(ctrl=>(\n                    <BuildControl \n                        disabled={props.disabled[ctrl.type]}\n                        key={ctrl.label} \n                        label={ctrl.label} \n                        ingredientAdded={()=>props.ingredientAdded(ctrl.type)} \n                        ingredientRemoved={()=>props.ingredientRemoved(ctrl.type)} \n                    />\n                ))\n            }\n            <button \n                onClick={props.clickPurchase}\n                className={styles.OrderButton} \n                disabled={props.price===4?true:false}>\n                Order Now\n            </button>\n        </div>\n    )\n}\n\nexport default buildControl","import React,{Component} from 'react'\nimport styles from './Modal.module.css'\nimport Backdrop from './Backdrop'\n\n// const modal = (props)=>(\n//     <React.Fragment>\n//         <Backdrop show={props.show} clickBackdrop={props.modalClosed}></Backdrop>\n//         <div \n//             className={styles.Modal}\n//             style={{transform:props.show?'translateY(0)':'translateY(-100vh)', opacity:props.show? '1':'0'}}>\n//             {props.children}\n//         </div>\n//     </React.Fragment>\n// )\n\nclass Modal extends Component{\n    shouldComponentUpdate(nextProps, nextState){\n        return nextProps.show!==this.props.show || nextProps.children !== this.props.children\n    }\n    render(){\n        return (\n            <React.Fragment>\n                <Backdrop show={this.props.show} clickBackdrop={this.props.modalClosed}></Backdrop>\n                <div \n                    className={styles.Modal}\n                    style={{transform:this.props.show?'translateY(0)':'translateY(-100vh)', opacity:this.props.show? '1':'0'}}>\n                    {this.props.children}\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Modal\n\n","import React from 'react'\nimport styles from './Button.module.css'\nconst button = (props)=>(\n    <button \n        onClick={props.clicked} \n        className={[styles.Button, styles[props.btnType]].join(' ')}>{props.children}</button>\n)\n\nexport default button","import React from 'react'\nimport Button from '../../UI/Button'\nconst orderSummary = (props)=>{\n\n    const ingredientKeys = Object.keys(props.ingredients)\n    const listArr= []\n    ingredientKeys.forEach(item=>{listArr.push(<li key={item + item}>{item} : {props.ingredients[item]}</li>)})\n    return (\n        <>\n            <h3>Your Order</h3>\n            <p>This is a burger you made worth: <strong>${props.totalPrice}</strong></p>\n            <ul>\n                {listArr}\n            </ul>\n            <p>Continue to Check Out?</p>\n            <Button btnType=\"Danger\" clicked={props.purchaseCancel}>CANCEL</Button>\n            <Button btnType='Success' clicked={props.purchaseContinue}>CONTINUE</Button>\n        </>\n    )\n}\nexport default orderSummary","import React from 'react'\nimport styles from './Spinner.module.css'\n\nconst spinner = (props)=>{\n    return (<div className={styles.Loader}>Loading...</div>)\n}\n\nexport default spinner","import React, { Component } from 'react';\nimport Burger from '../../components/Burger/Burger'\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls'\nimport Modal from '../../components/UI/Modal'\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary'\nimport Spinner from '../../components/UI/Spinner/Spinner'\nimport {connect} from 'react-redux'\nimport * as actions from '../../store/actions/index'  //here the last index can be omitted as it will auto find it.\n\n\nclass BurgerBuilder extends Component {\n\n  state={\n    purchasing: false,\n    loading:false\n  }\n\n  purchasingHandler=()=>{\n    if(this.props.isLoggedIn){\n      this.setState({purchasing:true})\n    }\n    else{\n      this.props.history.push('/auth')\n    }\n    \n  }\n  purchasingCancelHandler=()=>{\n    this.setState({purchasing:false})\n  }\n  purchasingContinueHandler=()=>{\n    this.props.onPurchaseInit()\n    this.props.history.push('/checkout')\n    // const queryParams = []\n    // for(let i in this.state.ingredients){ //i here refers to key in object\n    //   queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.state.ingredients[i]))\n    // }\n    // const queryString = queryParams.join('&')\n    // this.props.history.push({\n    //   pathname:'/checkout',\n    //   search: \"?\" + queryString\n    // })\n\n  }\n  \n  componentDidMount(){\n    this.props.initIngredientsHandler()\n    this.props.checkAuthState()\n  }\n\n  render() {   \n    const disabledInfo = {\n      ...this.props.ings\n    }\n    for(let key in disabledInfo){\n      disabledInfo[key] = disabledInfo[key]<=0\n    }\n    let orderSummary = null;\n    let burger = <Spinner />;\n\n    if ( this.props.ings ) {\n      burger = (\n        <React.Fragment>\n          <Burger ingredients={this.props.ings} />\n          <BuildControls \n            isLoggedIn={this.props.isLoggedIn}\n            clickPurchase={this.purchasingHandler}\n            price={this.props.price}\n            disabled = {disabledInfo}\n            ingredientAdded = {this.props.addIngredientHandler} \n            ingredientRemoved = {this.props.removeIngredientHandler} />\n        </React.Fragment>\n      );\n      orderSummary = <OrderSummary \n        totalPrice={this.props.price}\n        purchaseCancel={this.purchasingCancelHandler}\n        purchaseContinue={this.purchasingContinueHandler}\n        ingredients={this.props.ings} />\n    }\n\n    return (\n      <React.Fragment>\n        <Modal show={this.state.purchasing} modalClosed={this.purchasingCancelHandler}>\n          {orderSummary}\n        </Modal>\n        {burger}\n      </React.Fragment>\n\n    );\n  }\n}\n\nconst mapDispatchToProps=(dispatch)=>{\n    return {\n      //onIncrementCounter:()=> dispatch({type: 'incrementCounter'}),\n      addIngredientHandler: (name)=> dispatch(actions.addIngredient(name)),\n      removeIngredientHandler: (name)=> dispatch(actions.removeIngredient(name)),\n      initIngredientsHandler: ()=> dispatch(actions.initIngredients()) ,\n      onPurchaseInit: ()=>dispatch(actions.purchaseInit()),\n      checkAuthState: ()=>dispatch(actions.checkAuthState())\n    }\n}\n\nconst mapStateToProps=(state)=>{\n    return {\n      ings: state.burgerBuilder.ingredients,\n      price: state.burgerBuilder.totalPrice,\n      isLoggedIn: state.auth.isLoggedIn\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(BurgerBuilder);\n","import * as actionTypes from './actionTypes'\nimport axios from 'axios'\n\nexport const addIngredient = (ingName)=>{\n    return {\n        type: actionTypes.addIngredient,\n        ingredientName: ingName\n    }\n\n}\n export const removeIngredient = (ingName)=>{\n    return {\n        type: actionTypes.removeIngredient,\n        ingredientName: ingName\n    }\n\n}\n\nexport const setIngredients = (ingredients)=>{\n    return {\n        type: actionTypes.setIngredients,\n        ingredients\n    }\n}\nexport const initIngredients = ()=>{\n    return dispatch=>{\n        axios.get('https://aburgerbuilder.firebaseio.com/ingredients.json')\n        .then(res=>{\n            dispatch(setIngredients(res.data))\n        })  \n    }\n}","import * as actionTypes from './actionTypes'\nimport axios from 'axios'\n\nexport const purchaseOK = (id,orderData)=>{\n    return {\n        type: actionTypes.purchaseOk,\n        orderId: id,\n        orderData\n    }\n}\nexport const purchaseFail = (error)=>{\n    return {\n        type: actionTypes.purchaseFail,\n        error\n    }\n}\n\nexport const startingPurchase = ()=>{\n    return {\n        type: actionTypes.startingPurchase\n    }\n}\n//async\nexport const purchaseStart = (orderData,token)=>{\n    return (dispatch)=>{\n        dispatch(startingPurchase())\n        axios.post('/orders.json?auth='+token,orderData)\n            .then(res=>{\n                dispatch(purchaseOK(res.data,orderData))\n\n                //this.props.history.push('/')\n            })\n            .catch(err=>{\n                dispatch(purchaseFail(err))\n            })\n    }\n}\n\nexport const purchaseInit = ()=>{\n    return {\n        type: actionTypes.purchaseInit\n\n    }\n}\n\nexport const  fetchOrders= (orders)=>{\n    return {\n        type: actionTypes.fetchOrders,\n        orders\n    }\n}\nexport const fetchOrderInit = (userId,token)=>{\n    return dispatch=>{\n        const query = '?auth=' + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"' \n        axios.get('/orders.json'+ query)\n        .then(res=>{\n            const fetchedOrders =[]\n            for(let key in res.data){\n                const order ={\n                    id:key,\n                    ...res.data[key]\n                }\n                fetchedOrders.push(order)\n            }\n            dispatch(fetchOrders(fetchedOrders))\n        })\n        .catch(err=>{\n            console.log(err)\n        }) \n    }\n}","import React from 'react'\nimport Burger from '../../Burger/Burger'\nimport Button from '../../UI/Button'\nimport styles from './CheckoutSummary.module.css'\nconst checkoutSummary = (props)=>{\n    return (\n        <div className={styles.CheckoutSummary}>\n            <h1>Please enjoy your burger!</h1>\n            <div style={{width:'100%', margin:'auto'}}>\n                <Burger ingredients={props.ingredients}></Burger>\n            </div>\n            <Button btnType=\"Danger\" clicked={props.checkoutCancelled}>CANCEL</Button>\n            <Button btnType=\"Success\" clicked={props.checkoutContinued}>CONTINUE</Button>\n        </div>\n    )\n}\n\nexport default checkoutSummary","import React from 'react'\nimport styles from './Input.module.css'\nconst input = (props)=>{\n    let inputElement=null\n    switch(props.inputtype){\n        case('input'):\n            inputElement=<input className={styles.InputElement} type={props.type} name={props.name} required={props.required} value={props.value} onChange={props.changed} />\n            break\n        case('textarea'):\n            inputElement=<textarea className={styles.InputElement} type={props.type} name={props.name} required={props.required} value={props.value} onChange={props.changed} />\n            break\n        case('select'):\n            inputElement=(\n                <select className={styles.InputElement} value={props.value} onChange={props.changed}>\n                    {props.options.map(option=>(\n                        <option key={option.value} value={option.value}>{option.displayValue}</option>\n                    ))}\n                </select>\n            )\n            break\n        default:\n            inputElement=<input className={styles.InputElement} {...props} ></input>\n    }\n    return(\n        <div className={styles.Input}>\n            <label className={styles.Label}>{props.label}</label>\n            {inputElement}\n        </div>\n    )\n}\n\nexport default input","import React, { Component } from 'react'\nimport Button from '../../../components/UI/Button'\nimport styles from './ContactData.module.css'\nimport Input from '../../../components/UI/Input/Input'\nimport {connect} from 'react-redux'\nimport * as actions from '../../../store/actions/index'\n\nclass ContactData extends Component{\n    state={\n        name:'',\n        email:'',\n        street:'',\n        zip:'',\n        deliveryMethod:'fastest',\n        loading:false\n    }\n    orderHandler=(event)=>{\n        event.preventDefault()\n        const order = {\n            ingredients:this.props.ings,\n            price:this.props.price,\n            customer:{\n                name:this.state.name,\n                street:this.state.street,\n                zip:this.state.zip,  \n                email:this.state.email,\n                deliveryMethod: this.state.deliveryMethod\n            },\n            userId: this.props.userId\n        }\n        this.props.onOrderHandler(order,this.props.token)\n    }\n    changedHandler=(event,inputId)=>{\n        //another way: deep copy of the state, then replace state as a whole object.\n        \n        // handleUserInput (e) {\n        //     const name = e.target.name;\n        //     const value = e.target.value;\n        //     this.setState({[name]: value});\n        // }\n        if(inputId==='name'){\n            this.setState({name:event.target.value})\n        }\n        if(inputId==='email'){\n            this.setState({email:event.target.value})\n        }\n        if(inputId==='street'){\n            this.setState({street:event.target.value})\n        }\n        if(inputId==='zip'){\n            this.setState({zip:event.target.value})\n        }\n        if(inputId==='deliveryMethod'){\n            this.setState({deliveryMethod:event.target.value})\n        }\n    }\n    render(){\n        return (\n            <div className={styles.ContactData}>\n                <h4>Enter your personal info: </h4>\n                <form onSubmit={this.orderHandler}>\n                    <Input inputtype='input' type=\"text\" name='name' label=\"Your Name\" required={true} changed={(event)=>{this.changedHandler(event,'name')}} value={this.state.name}></Input>\n                    <Input inputtype='input' type=\"email\" name='email' label=\"Email\" required={true} changed={(event)=>{this.changedHandler(event,'email')}}  value={this.state.email}></Input>\n                    <Input inputtype='input' type=\"text\" name='street' label='Street' required={true} changed={(event)=>{this.changedHandler(event,'street')}}   value={this.state.street}></Input>\n                    <Input inputtype='input' type=\"text\" name='zip' label='Zip Code' required={true} changed={(event)=>{this.changedHandler(event,'zip')}} value={this.state.zip}></Input>\n                    <Input \n                        inputtype='select' \n                        name='deliveryMethod' \n                        label='Delivery Method' \n                        options={[{value:'fastest', displayValue:'Fastest'},{value:'cheapest', displayValue:'Cheapest'}]}\n                        changed={(event)=>{this.changedHandler(event,'deliveryMethod')}}\n                        value={this.state.deliveryMethod}></Input>\n                    <Button btnType=\"Success\">Order</Button>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state)=>{\n    return {\n        ings:state.burgerBuilder.ingredients,\n        price: state.burgerBuilder.totalPrice,\n        loading: state.order.loading,\n        token: state.auth.token,\n        userId: state.auth.userId\n    }\n}\nconst mapDispatchtoProps = (dispatch)=>{\n    return {\n        onOrderHandler: (orderData,token)=>dispatch(actions.purchaseStart(orderData,token))\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchtoProps)(ContactData)  ","\nimport React, { Component } from 'react'\nimport CheckoutSummary from '../../components/Order/Checkout/CheckoutSummary'\nimport {Route,Redirect} from 'react-router-dom'\nimport ContactData from '../Checkout/ContactData/ContactData'\nimport { connect} from 'react-redux'\nimport Spinner from '../../components/UI/Spinner/Spinner'\nclass Checkout extends Component{\n\n    // componentWillMount(){\n    //     this.props.onPurchaseInit()\n    // }\n    // componentDidMount(){\n    //     if(this.props.purchased){\n    //         this.props.history.replace('/')\n    //     }\n    // }\n\n    checkoutCancelledHandler=()=>{\n        this.props.history.goBack()\n    }\n    checkoutContinuedHandler=()=>{\n\n        this.props.history.replace('/checkout/contact-data')\n    }\n    render(){\n        let burger = <Spinner />;\n        let redirect = null\n        if(this.props.ings){\n            burger = <CheckoutSummary \n                        checkoutCancelled={this.checkoutCancelledHandler}\n                        checkoutContinued={this.checkoutContinuedHandler}\n                        ingredients={this.props.ings}>\n                    </CheckoutSummary>\n        }\n        if(this.props.purchased){\n            redirect = <Redirect to=\"/\" />\n            //this.props.history.replace('/')\n        }\n        return(\n            <div>\n                {redirect}\n                {burger}\n                <Route \n                    path={this.props.match.path + '/contact-data'} \n                    component={ContactData}>\n                </Route>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps=(state)=>{\n    return {\n        ings : state.burgerBuilder.ingredients,\n        purchased: state.order.purchased\n    }\n\n}\n\n// const mapDispatchToProps = (dispatch)=>{\n//     return {\n//         onPurchaseInit: ()=>dispatch(actions.purchaseInit())\n//     }\n// }\n\nexport default connect(mapStateToProps)(Checkout)","import React from 'react'\nimport styles from './Order.module.css'\nconst Order = (props)=>{\n    const ingredients = props.ingredients\n    const customer = props.customer\n    const price = props.price\n    return(\n        <div className={styles.Order}>\n            <h3>Hi, {customer.name} !</h3>\n            <p>This is your order: </p>\n            <p>Total price is: {price}</p>\n            <ul>\n                <li>Bacon: {ingredients.bacon}</li>\n                <li>Meat: {ingredients.meat}</li>\n                <li>Cheese: {ingredients.cheese}</li>\n                <li>Salad: {ingredients.salad}</li>\n            </ul>\n            <h3>About the customer:</h3>\n            <ul>\n                <li>Email: {customer.email}</li>\n                <li>Address: {customer.street}</li>\n                <li>Delivery type: {customer.deliveryMethod}</li>\n            </ul>\n        </div>\n    )\n}\n\nexport default Order","import React, { Component } from 'react'\nimport Order from '../../components/Order/Order'\nimport {connect} from 'react-redux'\nimport * as actions from '../../store/actions/index'\nclass Orders extends Component{\n    state={\n        loading: true\n    }\n    componentDidMount(){      \n        this.props.onInitOrdersHandler(this.props.userId, this.props.token)\n    }\n    render(){\n        let orders=[]\n        if(this.props.orders){\n            this.props.orders.forEach(element => {\n                orders.push(<Order key={element.id} price={element.price} ingredients={element.ingredients} customer={element.customer}></Order>)\n            });\n        }\n        return (orders)\n    }\n}\n\nconst mapStateToProps = (state)=>{\n    return {\n        orders: state.order.orders,\n        token: state.auth.token,\n        userId: state.auth.userId\n    }\n}\n\nconst mapDispatchToProps = (dispatch)=>{\n    return {\n        onInitOrdersHandler: (userId,token)=>dispatch(actions.fetchOrderInit(userId,token))\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Orders)","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport * as  actions from '../../store/actions/index'\nimport {Redirect} from 'react-router-dom'\n\nclass Logout extends Component {\n    componentDidMount(){\n        this.props.onLogout()\n    }\n    render(){\n        return <Redirect to=\"/\" />\n    }\n}\n\n const mapDispatchToProps = (dispatch)=>{\n     return {\n         onLogout: ()=>dispatch(actions.logout())\n     }\n }\nexport default connect(null,mapDispatchToProps)(Logout)","import React from 'react'\nimport styles from './Auth.module.css'\nexport const FormErrors = ({formErrors}) =>\n        <div className={styles.FormErrors}>\n            {Object.keys(formErrors).map((fieldName, i) => {\n                if(formErrors[fieldName].length > 0){\n                    return (\n                        <p key={i} style={{color:'red'}}>{fieldName} {formErrors[fieldName]}</p>\n                    )        \n                } else {\n                    return '';\n                }\n            })}\n        </div>\n\n","import React, { Component } from 'react'\nimport {Redirect} from 'react-router-dom'\nimport Input from '../../components/UI/Input/Input'\nimport isEmail from 'validator/lib/isEmail';\nimport styles from './Auth.module.css'\nimport {FormErrors} from './FormErrors'\nimport {connect} from 'react-redux'\nimport * as actions from '../../store/actions/index'\nimport Spinner from '../../components/UI/Spinner/Spinner'\n\nclass Auth extends Component {\n\n    state={\n        name:'',\n        email: '',\n        password: '',\n        confirmation: '',\n        formErrors: {name: '', email: '', password: '', confirmation: ''},\n        nameValid:false,\n        emailValid: false,\n        passwordValid: false,\n        confirmationValid: false,\n        signUpFormValid: false,\n        signInFormValid: false,\n        isSignup: true,\n        isSignin: false,\n    }\n\n    handleInputChange = (event,target) => { \n        this.setState(\n            {\n                [event.target.name]: event.target.value,\n            })\n        this.validateField(target, event.target.value)\n    }\n    validateField = (fieldName, value) => {\n        let fieldValidationErrors = this.state.formErrors;\n        let nameValid = this.state.nameValid;\n        let emailValid = this.state.emailValid;\n        let passwordValid = this.state.passwordValid;\n        let confirmationValid = this.state.confirmationValid;\n      \n        switch(fieldName) {\n          case 'name':\n            nameValid = value.length >= 3 && value.length <= 12;\n            fieldValidationErrors.name = nameValid ? '' : ' length range should be between 3~12';\n            break;\n          case 'email':\n            emailValid = isEmail(value.trim()) // value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\n            fieldValidationErrors.email = emailValid ? '' : ' is invalid';\n            break;\n          case 'password':\n            passwordValid = value.length >= 6 && value.length <= 12;\n            fieldValidationErrors.password = passwordValid ? '': ' length range should be between 6~12';\n            break;\n          case 'confirmation':\n            confirmationValid = value===this.state.password;\n            fieldValidationErrors.confirmation = confirmationValid ? '': ' not match password!';\n            break;\n          default:\n            break;\n        }\n        let signUpFormValid = nameValid && emailValid && passwordValid && confirmationValid\n        let signInFormValid = emailValid && passwordValid\n        this.setState(\n            {\n                formErrors: fieldValidationErrors,\n                nameValid: nameValid,\n                emailValid: emailValid,\n                passwordValid: passwordValid,\n                confirmationValid: confirmationValid,\n                signUpFormValid: signUpFormValid,\n                signInFormValid: signInFormValid\n            }\n        );\n    }\n      \n    // validateForm=()=> {\n    //     this.setState({signUpFormValid: this.state.nameValid && this.state.emailValid && this.state.passwordValid && this.state.confirmationValid});\n    // }\n    handleFormSubmit=(event)=>{\n        event.preventDefault()\n        if(this.state.isSignin){\n            this.props.onSignIn(this.state.email,this.state.password)\n        }\n        if(this.state.isSignup){\n            this.props.onSignUp(this.state.email,this.state.password)\n        }\n        \n    }\n    switchSignup=()=>{\n        this.setState({\n            isSignin:false,\n            isSignup:true\n        })\n    }\n    switchSignin=()=>{\n        this.setState({\n            isSignin:true,\n            isSignup:false\n        })\n    }\n\n    render(){   \n        \n        let form = <form onSubmit={this.handleFormSubmit}>\n                    <Input inputtype='input' type=\"text\" name='name' label=\"Your Name\" required={true} changed={(event)=>{this.handleInputChange(event,'name')}} value={this.state.name}></Input>\n                    <Input inputtype='input' type=\"email\" name='email' label=\"Email\" required={true} changed={(event)=>{this.handleInputChange(event,'email')}}  value={this.state.email}></Input>\n                    <Input inputtype='input' type=\"password\" name='password' label=\"Password\" required={true} changed={(event)=>{this.handleInputChange(event,'password')}}  value={this.state.password}></Input>\n                    <Input inputtype='input' type=\"password\" name='confirmation' label=\"Password Confirmation\" required={true} changed={(event)=>{this.handleInputChange(event,'confirmation')}}  value={this.state.confirmation}></Input>\n                    <button \n                        className={styles.SignUp} \n                        disabled={!this.state.signUpFormValid}>\n                        Sign Up\n                    </button>\n                </form>\n        if(!this.state.isSignup){  //sign in mode\n            form = <form onSubmit={this.handleFormSubmit}>\n                    <Input inputtype='input' type=\"email\" name='email' label=\"Email\" required={true} changed={(event)=>{this.handleInputChange(event,'email')}}  value={this.state.email}></Input>\n                    <Input inputtype='input' type=\"password\" name='password' label=\"Password\" required={true} changed={(event)=>{this.handleInputChange(event,'password')}}  value={this.state.password}></Input>\n                    <button \n                        className={styles.SignUp} \n                        disabled={!this.state.signInFormValid}>\n                        Sign In\n                    </button>\n                </form>\n        }\n        if(this.props.loading){\n            form=<Spinner />\n        }\n        let errorMessage = null\n        if(this.props.error){\n            errorMessage = (<p>{this.props.error.response.data.error.message}</p>)\n        }\n\n        let signupClasses = []\n        if(this.state.isSignup){\n            signupClasses = [styles.SwitchButton, styles.SwitchSignup,styles.SwitchActive]\n        }\n        else{\n            signupClasses = [styles.SwitchButton, styles.SwitchSignup]\n        }\n\n        let signinClasses = []\n        if(this.state.isSignin){\n            signinClasses = [styles.SwitchButton, styles.SwitchSignin,styles.SwitchActive]\n        }\n        else{\n            signinClasses = [styles.SwitchButton, styles.SwitchSignin]\n        }\n\n        let redirect = null\n        if(this.props.isLoggedIn){\n            if(this.props.buildingBurger){\n                redirect=<Redirect to=\"/checkout\" />\n            }else{\n                redirect=<Redirect to=\"/\" />\n            }\n            \n        }\n\n        return (             \n            <React.Fragment>  \n                <div className={styles.Switch}>\n                    {redirect}\n                    <button \n                        onClick={this.switchSignup}\n                        className={signupClasses.join(' ')}>\n                        Sign Up\n                    </button >\n                    <button \n                        onClick={this.switchSignin}\n                        className={signinClasses.join(' ')}>\n                        Sign In\n                    </button>\n                </div>    \n                <div className={styles.ContactData}>                \n                    <FormErrors formErrors={this.state.formErrors} />\n                    {form}\n                    {errorMessage}\n                </div>\n            </React.Fragment>    \n        )\n    }\n}\nconst mapStateToProps = (state)=>{\n    return {\n        loading: state.auth.loading,\n        token: state.auth.token,\n        userId: state.auth.userId,\n        error: state.auth.error,\n        isLoggedIn: state.auth.isLoggedIn,\n        buildingBurger: state.burgerBuilder.buildingBurger\n    }\n}\nconst mapDispatchToProps = (dispatch)=>{\n    return {\n        onSignIn :(email,password)=> dispatch(actions.authSignIn(email,password)),\n        onSignUp :(email,password)=> dispatch(actions.auth(email,password)),\n    }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(Auth)","import React, { Component } from 'react';\nimport Layout from './components/Layout/Layout'\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder'\nimport Checkout from './containers/Checkout/Checkout'\nimport Orders from './containers/Orders/Orders'\nimport Logout from './containers/Auth/Logout'\nimport {Route, Switch, Redirect} from 'react-router-dom'\nimport Auth from './containers/Auth/Auth'\nimport {connect} from 'react-redux'\n\nclass App extends Component {\n  render() {\n\n    let routes = (\n      <Switch>\n        <Route path=\"/\" exact component={BurgerBuilder}></Route>\n        <Route path=\"/auth\" component={Auth}></Route>\n        <Redirect to='/' />\n      </Switch>\n    )\n    if(this.props.isAuthenticated){\n      routes = (\n        <Switch>\n          <Route path=\"/checkout\" component={Checkout}></Route>\n          <Route path=\"/\" exact component={BurgerBuilder}></Route>\n          <Route path=\"/orders\" component={Orders}></Route>\n          <Route path=\"/logout\" component={Logout}></Route>\n          <Route path=\"/auth\" component={Auth}></Route>\n          <Redirect to='/' />\n        </Switch>\n      )\n    }\n    return (\n      <div>\n        <Layout>\n          {routes}\n        </Layout>\n      </div>\n    );\n  }\n}\n\n const mapStateToProps = state=>{\n   return {\n     isAuthenticated: state.auth.isLoggedIn\n   }\n }\nexport default connect(mapStateToProps)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes'\n\nconst initialState = {\n    ingredients:null,//{bacon:1,meat:1,salad:1,cheese:1},\n    totalPrice: 4,\n    buildingBurger: false\n}\nconst INGREDIENT_PRICES = {\n    salad: 0.5,\n    meat:1.5,\n    cheese: 0.35,\n    bacon: 0.85\n  }\n\nconst reducer = (state=initialState, action)=>{\n    switch(action.type){\n        case(actionTypes.addIngredient):\n            return {\n                ...state,\n                ingredients:{\n                    ...state.ingredients,\n                    [action.ingredientName]:state.ingredients[action.ingredientName] + 1\n                },\n                buildingBurger:true,\n                totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\n            }\n        case(actionTypes.removeIngredient):\n            let buildingBurger = true\n            if(state.totalPrice - INGREDIENT_PRICES[action.ingredientName]===4){\n                buildingBurger = false\n            }\n            return {\n                ...state,\n                ingredients:{\n                    ...state.ingredients,\n                    [action.ingredientName]:state.ingredients[action.ingredientName] - 1\n                },\n                buildingBurger,\n                totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName]\n            }\n        case(actionTypes.setIngredients):\n            return {\n                ...state,\n                ingredients: action.ingredients,\n                totalPrice: 4,\n                buildingBurger:false\n                //totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName]\n            }\n        default:\n            return state\n    }\n}\n\nexport default reducer","import * as acitonTypes from '../actions/actionTypes'\n\n\nconst initialState = {\n    orders:[],\n    loading:false,\n    purchased: false\n}\nconst reducer = (state=initialState, action)=>{\n    switch(action.type){\n        case(acitonTypes.purchaseInit):\n            return {\n                ...state,\n                purchased: false\n            }\n        case(acitonTypes.startingPurchase):\n            return {\n                ...state,\n                loading:true\n            }\n        case(acitonTypes.purchaseOk):  \n            const newOrder = {\n                ...action.orderData,\n                id:action.orderId\n            } \n            return {\n                ...state,\n                purchased: true,\n                loading:false,\n                orders: state.orders.concat(newOrder)\n            }\n        case(acitonTypes.purchaseFail):\n            return {\n                purchased: false,\n                loading: false,\n                ...state\n            }\n        case(acitonTypes.fetchOrders):\n            return {\n                ...state,\n                orders: action.orders\n            }\n        default:\n            return state\n    }\n}\n\nexport default reducer","import * as actionTypes from '../actions/actionTypes'\n\nconst initialState = {\n    token:null,\n    userId:null,\n    error:null,\n    loading:false,\n    isLoggedIn:false\n}\n\nconst reducer =(state=initialState,action)=>{\n    switch(action.type) {\n        case(actionTypes.auth_start):\n            return {\n                ...state,\n                loading: true\n            }\n        case(actionTypes.auth_fail):\n            return {\n                ...state,\n                error:action.error,\n                loading: false\n            }\n        case(actionTypes.auth_success):\n            return {\n                ...state,\n                userId:action.authData.localId,\n                token:action.authData.idToken,\n                loading: false,\n                isLoggedIn: true\n            }\n        case(actionTypes.logout):\n            return {\n                ...state,\n                userId:null,\n                token:null,\n                loading: false,\n                isLoggedIn: false\n            }\n        case(actionTypes.checkAuthState):\n            const expirationDate = localStorage.getItem('expirationDate')\n            const currentDate = new Date()\n            if(localStorage.getItem('token')){\n                if(currentDate>=expirationDate){\n                    localStorage.removeItem('userId')\n                    localStorage.removeItem('token')\n                    localStorage.removeItem('expirationDate')\n                    return { //expired: \n                        ...state,\n                        userId:null,\n                        token:null,\n                        loading: false,\n                        isLoggedIn: false\n                    }\n                }else{\n                    return {\n                        ...state,\n                        token:localStorage.getItem('token'),\n                        userId:localStorage.getItem('userId'),\n                        loading:false,\n                        isLoggedIn:true\n                    }\n                }\n            }\n            else{\n                return state\n            }\n\n        default:\n            return state\n    }\n}\n\nexport default reducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport axios from 'axios'\nimport {BrowserRouter, HashRouter} from 'react-router-dom'\n\nimport {Provider} from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\n\nimport burgerBuilderReducer from './store/reducers/burgerBuilder'\nimport orderReducer from './store/reducers/order'\nimport authReducer from './store/reducers/auth'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n    burgerBuilder: burgerBuilderReducer,\n    order: orderReducer,\n    auth: authReducer\n})\nconst store = createStore(rootReducer, /* preloadedState, */ composeEnhancers(\n    applyMiddleware(thunk)\n));\n//const store = createStore(burgerBuilderReducer,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\naxios.defaults.baseURL='https://aburgerbuilder.firebaseio.com/'\n\nReactDOM.render(<Provider store={store}><HashRouter><App /></HashRouter></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}